.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_plotting_basemap_background.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plotting_basemap_background.py:


Adding a background map to plots
--------------------------------

This example shows how you can add a background basemap to plots created
with the geopandas ``.plot()`` method. This makes use of the
`contextily <https://github.com/geopandas/contextily>`__ package to retrieve
web map tiles from several sources (OpenStreetMap, Stamen).


.. code-block:: default

    # sphinx_gallery_thumbnail_number = 3
    import geopandas







Let's use the NYC borough boundary data that is available in geopandas
datasets. Plotting this gives the following result:


.. code-block:: default


    df = geopandas.read_file(geopandas.datasets.get_path('nybb'))
    ax = df.plot(figsize=(10, 10), alpha=0.5, edgecolor='k')




.. image:: /gallery/images/sphx_glr_plotting_basemap_background_001.png
    :class: sphx-glr-single-img




Convert the data to Web Mercator
================================

Web map tiles are typically provided in
`Web Mercator <https://en.wikipedia.org/wiki/Web_Mercator>`__
(`EPSG 3857 <https://epsg.io/3857>`__), so we need to make sure to convert
our data first to the same CRS to combine our polygons and background tiles
in the same map:


.. code-block:: default


    df = df.to_crs(epsg=3857)








.. code-block:: default


    import contextily as ctx







Add background tiles to plot
============================

We can use `add_basemap` function of contextily to easily add a background
map to our plot. :


.. code-block:: default


    ax = df.plot(figsize=(10, 10), alpha=0.5, edgecolor='k')
    ctx.add_basemap(ax)




.. image:: /gallery/images/sphx_glr_plotting_basemap_background_002.png
    :class: sphx-glr-single-img




We can control the detail of the map tiles using the optional `zoom` keyword
(be careful to not specify a too high `zoom` level,
as this can result in a large download).:


.. code-block:: default


    ax = df.plot(figsize=(10, 10), alpha=0.5, edgecolor='k')
    ctx.add_basemap(ax, zoom=12)




.. image:: /gallery/images/sphx_glr_plotting_basemap_background_003.png
    :class: sphx-glr-single-img




By default, contextily uses the Stamen Terrain style. We can specify a
different style using ``ctx.providers``:


.. code-block:: default


    ax = df.plot(figsize=(10, 10), alpha=0.5, edgecolor='k')
    ctx.add_basemap(ax, url=ctx.providers.Stamen.TonerLite)
    ax.set_axis_off()



.. image:: /gallery/images/sphx_glr_plotting_basemap_background_004.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.788 seconds)


.. _sphx_glr_download_gallery_plotting_basemap_background.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plotting_basemap_background.py <plotting_basemap_background.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plotting_basemap_background.ipynb <plotting_basemap_background.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
